<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on shotarok&#39;s Tech Blog</title>
    <link>http://blog.shotarok.com/tags/hugo/index.xml</link>
    <description>Recent content in Hugo on shotarok&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Written by Shotaro Kohama</copyright>
    <atom:link href="http://blog.shotarok.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo &#43; Bitbucket &#43; CircleCI で GitHub Pages に自動デプロイ</title>
      <link>http://blog.shotarok.com/post/hugo-with-bitbucket-and-circleci/</link>
      <pubDate>Mon, 26 Dec 2016 22:00:00 +0900</pubDate>
      
      <guid>http://blog.shotarok.com/post/hugo-with-bitbucket-and-circleci/</guid>
      <description>

&lt;p&gt;このブログは Hugo で生成した静的ファイルを GitHub Pages でホスティングしていて Hugo に食わせるファイル自体は BitBucket のプライベートレポジトリで管理しています.&lt;/p&gt;

&lt;p&gt;久しぶりにブログを書くと Hugo のコマンドを忘れてしまって, &lt;code&gt;hugo server&lt;/code&gt; でビルドした結果を
リンクのホストが localhost になっているのに気付かずに push してしまったり, 時間がかかっていたので
&lt;strong&gt;BitBucket に更新があると CircleCI で Hugo の静的ファイルを生成して GitHub Pages にデプロイする&lt;/strong&gt;
ように下のような手順でしました.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;GitHub Pages のレポジトリにデプロイキーを登録&lt;/li&gt;
&lt;li&gt;BitBucket のプライベートレポジトリを CircleCI に登録&lt;/li&gt;
&lt;li&gt;CircleCI にデプロイキーを登録&lt;/li&gt;
&lt;li&gt;BitBucket のプライベートレポジトリに circle.yml を追加&lt;/li&gt;
&lt;li&gt;記事を編集して push すると自動デプロイされることを確認&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以下，ハマったところ・注意したところをポイントに手順を紹介します.&lt;/p&gt;

&lt;h1 id=&#34;1-github-pages-にデプロイキーを登録&#34;&gt;1. GitHub Pages にデプロイキーを登録&lt;/h1&gt;

&lt;p&gt;CircleCI からデプロイを行うために公開鍵を ssh-key をデプロイキーとして登録します. デプロイキーは下のような感じでローカルで生成します.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/.ssh
$ ssh-keygen -t rsa -f hugo-blog
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in hugo-blog.
Your public key has been saved in hugo-blog.pub.
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;パスワードは空にしないと手順3で CircleCI に登録できないので気を付けて下さい.&lt;/strong&gt; あとは生成した公開鍵 &lt;code&gt;hugo-blog.pub&lt;/code&gt; を GitHub のレポジトリの &lt;code&gt;Settings&lt;/code&gt; に &lt;code&gt;Deploy Keys&lt;/code&gt; メニューからデプロイキーに登録して下さい.&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&#34;http://qiita.com/master-of-sugar/items/a9892879f6e9cb9f3c97&#34;&gt;Qiita | GithubのDeploy Keysを登録してパスワードなしでアクセスする&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;2-bitbucket-のプライベートレポジトリを-circleci-に登録&#34;&gt;2. BitBucket のプライベートレポジトリを CircleCI に登録&lt;/h1&gt;

&lt;p&gt;2016年7月から BitBucket も CircleCI に Integration できるようになりました. 以下の公式ブログを参考に認証を行って，対象のブログレポジトリを Build Project に追加して下さい.&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&#34;https://circleci.com/blog/announcing-circleci-beta-support-for-atlassian-bitbucket/&#34;&gt;CircleCI Blog | Announcing CircleCI Beta Support for Atlassian Bitbucket&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;3-circleci-にデプロイキーを登録&#34;&gt;3. CircleCI にデプロイキーを登録&lt;/h1&gt;

&lt;p&gt;手順1で生成した秘密鍵を CircleCI に登録します. サイドメニューから  &lt;code&gt;PERMISSIONS&lt;/code&gt; の &lt;code&gt;SSH Permissions&lt;/code&gt; を開きます. &lt;code&gt;Add SSH Key&lt;/code&gt; ボタンを押し秘密鍵を登録します.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.shotarok.com/images/20161226/add-ssh-key.png&#34; alt=&#34;Add SSH Key&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GitHub Pages にデプロイする場合は &lt;code&gt;github.com&lt;/code&gt; を &lt;code&gt;Hostname&lt;/code&gt; に設定すれば十分です.&lt;/p&gt;

&lt;h1 id=&#34;4-butbucket-のレポジトリに-circle-yml-を追加&#34;&gt;4. ButBucket のレポジトリに circle.yml を追加&lt;/h1&gt;

&lt;p&gt;CircleCI では circle.yml をレポジトリのトップに置くことで CI の設定を行うことができます.
今回設定したファイルは以下で、注意したポイントはこんなところです.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;デプロイの対象は master のみにしています&lt;/li&gt;
&lt;li&gt;public 以下の更新がない場合は，テストの &lt;code&gt;git commit&lt;/code&gt; が成功しないのでデプロイは実行されません&lt;/li&gt;
&lt;li&gt;circle.yml のテストも出来るように &lt;code&gt;master&lt;/code&gt; だけでなく &lt;code&gt;feature/&lt;/code&gt; が付いたブランチも CI の対象とする&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;machine:
  timezone: Asia/Tokyo

general:
  branches:
    only:
      - master
      - /feature\/.*/

dependencies:
  pre:
    - go get -v github.com/spf13/hugo
    - git config --global user.name &amp;quot;Shotaro Kohama&amp;quot;
    - git config --global user.email &amp;quot;khmshtr28@gmail.com&amp;quot;
    - git clone git@github.com:shotarok/shotarok.github.io.git public

compile:
  override:
    - hugo -t angels-ladder

test:
  override:
    - cd public &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m &amp;quot;Update blog via Circle CI&amp;quot;

deployment:
  master:
    branch: master
    commands:
      - cd public &amp;amp;&amp;amp; git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;5-記事を編集して自動デプロイされることを確認&#34;&gt;5. 記事を編集して自動デプロイされることを確認&lt;/h1&gt;

&lt;p&gt;最後に記事を追加・編集して BitBucket に master ブランチに push します.
もしくはプルリクエストを作って master にマージします.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CircleCI でビルドが成功していること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.shotarok.com/images/20161226/build-success.png&#34; alt=&#34;Build Success&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub で commit されていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.shotarok.com/images/20161226/update-via-circleci.png&#34; alt=&#34;Update via CircleCI&#34; /&gt;&lt;/p&gt;

&lt;p&gt;が確認できれば自動デプロイ成功です.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo &#43; Github Pages でブログ開始</title>
      <link>http://blog.shotarok.com/post/2015-12-15_my-first-post/</link>
      <pubDate>Tue, 15 Dec 2015 08:16:39 +0900</pubDate>
      
      <guid>http://blog.shotarok.com/post/2015-12-15_my-first-post/</guid>
      <description>

&lt;p&gt;以前は はてなブログ を使っていたのですが、今年の４月に就職してデジタルマーケティングの会社に入ったので、
3rd party javascript やタグマネージャーの勉強することもままあり、
CAMPHOR- Advent Calendar に参加する前に、タグを好きに追加できるブログをはじめてみようとなりました。&lt;/p&gt;

&lt;p&gt;Markdown で書ける静的ジェネレーターなら、正直なんでも良かったのですが、
使っている人がそこそこいる(静的ジェネレーターの GitHub の star 数ランキングで割と上位だった)、
気に入ったテーマがあった、かつ 普段触らない言語 go を触る良い機会になるかもと思ったこと
等を理由に &lt;strong&gt;Hugo&lt;/strong&gt; を使うことにしました。&lt;/p&gt;

&lt;h1 id=&#34;簡単な使い方&#34;&gt;簡単な使い方&lt;/h1&gt;

&lt;p&gt;Hugo を使うと &lt;code&gt;hugo new site &amp;lt;name&amp;gt;&lt;/code&gt; というコマンドでサイトの雛形を作る事ができます。
Hugo自体は &lt;code&gt;go get -u -v github.com/spf13/hugo&lt;/code&gt; や &lt;code&gt;brew install hugo&lt;/code&gt; でインストールできます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site test-blog
$ tree test-blog
test-blog
├── archetypes
├── config.toml
├── content
├── data
├── layouts
└── static

5 directories, 1 file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テーマは &lt;a href=&#34;https://github.com/spf13/hugoThemes/&#34;&gt;&lt;code&gt;hugoThemes&lt;/code&gt;&lt;/a&gt; というレポジトリにたくさんまとめてあります。
これらを利用するにはまず theme ディレクトリを作成しクローンしてきます。
そのあと気に入ったテーマを &lt;code&gt;-t&lt;/code&gt; で指定し &lt;code&gt;hugo&lt;/code&gt; を実行すると &lt;code&gt;public&lt;/code&gt; フォルダに静的コンテンツが作成されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd test-blog
$ git clone --depth 1 --recursive https://github.com/spf13/hugoThemes.git themes
$ hugo -t angels-ladder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新しい投稿を作成する場合は &lt;code&gt;hugo new post/&amp;lt;file name&amp;gt;.md&lt;/code&gt; でマークダウン引用の雛形を作成することができます。
また &lt;code&gt;hugo server -t angels-ladder -w&lt;/code&gt; でローカルにサーバを建てることによって、エディターで編集したファイルをブラウザで確認しながら作業する事ができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/hello-world.md
$ hugo server -t angels-ladder -w
# Edit post/hello-world.md by some editors
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;個人的なレポジトリ構成&#34;&gt;個人的なレポジトリ構成&lt;/h1&gt;

&lt;p&gt;Hugo によって作成された静的コンテンツは GitHub Pages を利用して管理し、
雛形の方は theme も含めて BitBucket のプライベートレポジトリで管理しています。
これで Github Pages のレポジトリには静的なマークアップのコードだけになり、
マークダウンのファイルや自分用に少し変更したテーマなどはBidBucketで管理することができます。&lt;/p&gt;

&lt;h2 id=&#34;github-での静的コンテンツのレポジトリ管理&#34;&gt;Github での静的コンテンツのレポジトリ管理&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ cd test-blog/public
$ git init
$ git remote add origin git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git
$ git add --all &amp;amp; git commit -m &amp;quot;Initial commit&amp;quot;
$ git push --all
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bidbucket-での-マークダウン-hugoテーマ-のレポジトリ管理&#34;&gt;BidBucket での マークダウン&amp;amp;Hugoテーマ のレポジトリ管理&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ cd test-blog
$ git init
$ echo public &amp;gt;&amp;gt; .gitignore
$ git remote add origin git@bidbucket.org:&amp;lt;username&amp;gt;/hugo-blog.git
$ git add --all &amp;amp; git commit -m &amp;quot;Initial commit&amp;quot;
$ git push origin --all
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;special-thanks&#34;&gt;Special Thanks&lt;/h1&gt;

&lt;p&gt;今回参考にさせていただいたサイト&lt;br /&gt;
・&lt;a href=&#34;https://github.com/spf13/Hugo&#34;&gt;https://github.com/spf13/Hugo&lt;/a&gt;&lt;br /&gt;
　本家レポジトリ。ドキュメントもしっかりしていて、わかりやすい！&lt;br /&gt;
・ &lt;a href=&#34;http://tanksuzuki.com/post/hugo-github-pages-1/&#34;&gt;http://tanksuzuki.com/post/hugo-github-pages-1/&lt;/a&gt;&lt;br /&gt;
　とても丁寧に解説されていたので大変重宝しました。テーマも使わせて頂きました！ありがとうございます！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>