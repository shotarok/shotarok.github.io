<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on shotarok&#39;s Tech Blog</title>
    <link>http://blog.shotarok.com/tags/hugo/</link>
    <description>Recent content in Hugo on shotarok&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 15 Dec 2015 08:16:39 +0900</lastBuildDate>
    <atom:link href="http://blog.shotarok.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo &#43; Github Pages でブログ開始</title>
      <link>http://blog.shotarok.com/post/2015-12-15_my-first-post/</link>
      <pubDate>Tue, 15 Dec 2015 08:16:39 +0900</pubDate>
      
      <guid>http://blog.shotarok.com/post/2015-12-15_my-first-post/</guid>
      <description>

&lt;p&gt;以前は はてなブログ を使っていたのですが、今年の４月に就職してデジタルマーケティングの会社に入ったので、
3rd party javascript やタグマネージャーの勉強することもままあり、
CAMPHOR- Advent Calendar に参加する前に、タグを好きに追加できるブログをはじめてみようとなりました。&lt;/p&gt;

&lt;p&gt;Markdown で書ける静的ジェネレーターなら、正直なんでも良かったのですが、
使っている人がそこそこいる(静的ジェネレーターの GitHub の star 数ランキングで割と上位だった)、
気に入ったテーマがあった、かつ 普段触らない言語 go を触る良い機会になるかもと思ったこと
等を理由に &lt;strong&gt;Hugo&lt;/strong&gt; を使うことにしました。&lt;/p&gt;

&lt;h1 id=&#34;簡単な使い方:8fdad275f77835e8ce5f225ce05b2c38&#34;&gt;簡単な使い方&lt;/h1&gt;

&lt;p&gt;Hugo を使うと &lt;code&gt;hugo new site &amp;lt;name&amp;gt;&lt;/code&gt; というコマンドでサイトの雛形を作る事ができます。
Hugo自体は &lt;code&gt;go get -u -v github.com/spf13/hugo&lt;/code&gt; や &lt;code&gt;brew install hugo&lt;/code&gt; でインストールできます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site test-blog
$ tree test-blog
test-blog
├── archetypes
├── config.toml
├── content
├── data
├── layouts
└── static

5 directories, 1 file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テーマは &lt;a href=&#34;https://github.com/spf13/hugoThemes/&#34;&gt;&lt;code&gt;hugoThemes&lt;/code&gt;&lt;/a&gt; というレポジトリにたくさんまとめてあります。
これらを利用するにはまず theme ディレクトリを作成しクローンしてきます。
そのあと気に入ったテーマを &lt;code&gt;-t&lt;/code&gt; で指定し &lt;code&gt;hugo&lt;/code&gt; を実行すると &lt;code&gt;public&lt;/code&gt; フォルダに静的コンテンツが作成されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd test-blog
$ git clone --depth 1 --recursive https://github.com/spf13/hugoThemes.git themes
$ hugo -t angels-ladder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新しい投稿を作成する場合は &lt;code&gt;hugo new post/&amp;lt;file name&amp;gt;.md&lt;/code&gt; でマークダウン引用の雛形を作成することができます。
また &lt;code&gt;hugo server -t angels-ladder -w&lt;/code&gt; でローカルにサーバを建てることによって、エディターで編集したファイルをブラウザで確認しながら作業する事ができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/hello-world.md
$ hugo server -t angels-ladder -w
# Edit post/hello-world.md by some editors
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;個人的なレポジトリ構成:8fdad275f77835e8ce5f225ce05b2c38&#34;&gt;個人的なレポジトリ構成&lt;/h1&gt;

&lt;p&gt;Hugo によって作成された静的コンテンツは GitHub Pages を利用して管理し、
雛形の方は theme も含めて BitBucket のプライベートレポジトリで管理しています。
これで Github Pages のレポジトリには静的なマークアップのコードだけになり、
マークダウンのファイルや自分用に少し変更したテーマなどはBidBucketで管理することができます。&lt;/p&gt;

&lt;h2 id=&#34;github-での静的コンテンツのレポジトリ管理:8fdad275f77835e8ce5f225ce05b2c38&#34;&gt;Github での静的コンテンツのレポジトリ管理&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ cdd test-blog/public
$ git init
$ git remote add origin git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git
$ git add --all &amp;amp; git commit -m &amp;quot;Initial commit&amp;quot;
$ git push --all
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bidbucket-での-マークダウン-hugoテーマ-のレポジトリ管理:8fdad275f77835e8ce5f225ce05b2c38&#34;&gt;BidBucket での マークダウン&amp;amp;Hugoテーマ のレポジトリ管理&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ cd test-blog
$ git init
$ echo public &amp;gt;&amp;gt; .gitignore
$ git remote add origin git@bidbucket.org:&amp;lt;username&amp;gt;/hugo-blog.git
$ git add --all &amp;amp; git commit -m &amp;quot;Initial commit&amp;quot;
$ git push origin --all
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;special-thanks:8fdad275f77835e8ce5f225ce05b2c38&#34;&gt;Special Thanks&lt;/h1&gt;

&lt;p&gt;今回参考にさせていただいたサイト&lt;br /&gt;
・&lt;a href=&#34;https://github.com/spf13/Hugo&#34;&gt;https://github.com/spf13/Hugo&lt;/a&gt;&lt;br /&gt;
　本家レポジトリ。ドキュメントもしっかりしていて、わかりやすい！&lt;br /&gt;
・ &lt;a href=&#34;http://tanksuzuki.com/post/hugo-github-pages-1/&#34;&gt;http://tanksuzuki.com/post/hugo-github-pages-1/&lt;/a&gt;&lt;br /&gt;
　とても丁寧に解説されていたので大変重宝しました。テーマも使わせて頂きました！ありがとうございます！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>